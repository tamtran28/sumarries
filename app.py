import streamlit as st
import os
import fitz  # PyMuPDF
import docx  # python-docx
from gensim.summarization import summarize # V√≠ d·ª• d√πng gensim cho extractive summarization

# --- H√ÄM X·ª¨ L√ù ---
def extract_text_from_file(file_path):
    """T·ª± ƒë·ªông tr√≠ch xu·∫•t vƒÉn b·∫£n t·ª´ file PDF ho·∫∑c DOCX."""
    file_extension = os.path.splitext(file_path)[1].lower()
    if file_extension == ".pdf":
        try:
            doc = fitz.open(file_path)
            text = "".join(page.get_text() for page in doc)
            doc.close()
            return text
        except Exception as e:
            return f"L·ªói khi ƒë·ªçc file PDF: {e}"
    elif file_extension == ".docx":
        try:
            doc = docx.Document(file_path)
            text = "\n".join(para.text for para in doc.paragraphs)
            return text
        except Exception as e:
            return f"L·ªói khi ƒë·ªçc file DOCX: {e}"
    else:
        return "ƒê·ªãnh d·∫°ng file kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£."

def summarize_text_extractive(text):
    """T√≥m t·∫Øt vƒÉn b·∫£n b·∫±ng ph∆∞∆°ng ph√°p tr√≠ch xu·∫•t (Gensim)."""
    # X·ª≠ l√Ω tr∆∞·ªùng h·ª£p text qu√° ng·∫Øn ƒë·ªÉ t√≥m t·∫Øt
    if len(text.split()) < 100: # C·∫ßn √≠t nh·∫•t 100 t·ª´ ƒë·ªÉ t√≥m t·∫Øt c√≥ nghƒ©a
        return "N·ªôi dung qu√° ng·∫Øn ƒë·ªÉ t√≥m t·∫Øt. Vui l√≤ng cung c·∫•p vƒÉn b·∫£n d√†i h∆°n."
    try:
        # T√≥m t·∫Øt v·ªõi ƒë·ªô d√†i b·∫±ng 20% b·∫£n g·ªëc
        return summarize(text, ratio=0.2)
    except Exception as e:
        return "Kh√¥ng th·ªÉ t·∫°o b·∫£n t√≥m t·∫Øt. VƒÉn b·∫£n c√≥ th·ªÉ kh√¥ng ƒë·ªß c·∫•u tr√∫c c√¢u r√µ r√†ng."

# --- GIAO DI·ªÜN ·ª®NG D·ª§NG ---
st.set_page_config(page_title="Tr·ª£ l√Ω T√≥m t·∫Øt VƒÉn b·∫£n", layout="wide")

st.title("Tr·ª£ l√Ω T√≥m t·∫Øt VƒÉn b·∫£n ü§ñ")
st.write("T·∫£i l√™n vƒÉn b·∫£n ph√°p lu·∫≠t, quy·∫øt ƒë·ªãnh... d∆∞·ªõi d·∫°ng PDF ho·∫∑c Word ƒë·ªÉ nh·∫≠n b·∫£n t√≥m t·∫Øt nhanh ch√≥ng.")

# Cho ph√©p t·∫£i l√™n c·∫£ file pdf v√† docx
uploaded_file = st.file_uploader("Ch·ªçn m·ªôt file PDF ho·∫∑c Word", type=["pdf", "docx"])

if uploaded_file is not None:
    # T·∫°o m·ªôt th∆∞ m·ª•c t·∫°m ƒë·ªÉ l∆∞u file
    if not os.path.exists("temp"):
        os.makedirs("temp")
    
    file_path = os.path.join("temp", uploaded_file.name)

    # L∆∞u file t·ª´ b·ªô nh·ªõ ƒë·ªám v√†o ƒëƒ©a
    with open(file_path, "wb") as f:
        f.write(uploaded_file.getbuffer())

    st.success(f"ƒê√£ t·∫£i l√™n th√†nh c√¥ng file: **{uploaded_file.name}**")

    if st.button("T·∫°o b·∫£n t√≥m t·∫Øt"):
        with st.spinner("ƒêang ph√¢n t√≠ch v√† t√≥m t·∫Øt vƒÉn b·∫£n..."):
            # B∆∞·ªõc 1: Tr√≠ch xu·∫•t vƒÉn b·∫£n
            raw_text = extract_text_from_file(file_path)

            if "L·ªói" in raw_text or "kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£" in raw_text:
                st.error(raw_text)
            else:
                # B∆∞·ªõc 2: T√≥m t·∫Øt vƒÉn b·∫£n
                summary = summarize_text_extractive(raw_text)
                
                # Hi·ªÉn th·ªã k·∫øt qu·∫£
                st.subheader("B·∫£n t√≥m t·∫Øt:")
                st.write(summary)

                with st.expander("Xem n·ªôi dung g·ªëc ƒë√£ tr√≠ch xu·∫•t"):
                    st.text_area("N·ªôi dung g·ªëc", raw_text, height=300)

    # D·ªçn d·∫πp file t·∫°m sau khi x·ª≠ l√Ω
    if os.path.exists(file_path):
        os.remove(file_path)
